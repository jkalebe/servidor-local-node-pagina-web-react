{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jerem\\\\Projects\\\\desafio\\\\frontend\\\\src\\\\DataTableComp.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst $ = require('jquery');\n\n$.DataTable = require('datatables.net');\n\nrequire('datatables.net-dt/css/jquery.dataTables.css');\n\nrequire('datatables.net-dt/css/jquery.dataTables.min.css');\n\nconst columns = [{\n  title: 'Name',\n  data: 'name'\n}, {\n  title: 'Idade',\n  data: 'idade'\n}, {\n  title: 'CPF',\n  data: 'cpf'\n}, {\n  title: 'Data Nasc',\n  data: 'data_nasc'\n}];\n\nclass DataTableComp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reloadTableData = data => {\n      const table = $('.data-table-wrapper').find('table').DataTable();\n      table.clear();\n      table.rows.add(data);\n      table.draw();\n    };\n  }\n\n  componentDidMount() {\n    this.$el = $(this.el);\n    this.$el.DataTable({\n      dom: '<\"data-table-wrapper\"t>',\n      data: this.props.data,\n      columns: columns,\n      ordering: false,\n      language: {\n        emptyTable: 'Search a name'\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    $(\".data-table-wrapper\").find(\"table\").DataTable().destroy(true);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.data !== this.props.data) {\n      this.reloadTableData(nextProps.data);\n    }\n\n    return false;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-borderless display compact cell-border dt-body-center\",\n        id: \"dataTable\",\n        width: \"100%\",\n        cellSpacing: \"0\",\n        ref: el => this.el = el\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DataTableComp;","map":{"version":3,"sources":["C:/Users/jerem/Projects/desafio/frontend/src/DataTableComp.js"],"names":["React","Component","$","require","DataTable","columns","title","data","DataTableComp","constructor","props","reloadTableData","table","find","clear","rows","add","draw","componentDidMount","$el","el","dom","ordering","language","emptyTable","componentWillUnmount","destroy","shouldComponentUpdate","nextProps","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AACA,MAAMC,CAAC,GAAGC,OAAO,CAAE,QAAF,CAAjB;;AACAD,CAAC,CAACE,SAAF,GAAcD,OAAO,CAAC,gBAAD,CAArB;;AACAA,OAAO,CAAE,6CAAF,CAAP;;AACAA,OAAO,CAAE,iDAAF,CAAP;;AACA,MAAME,OAAO,GAAG,CACZ;AAACC,EAAAA,KAAK,EAAE,MAAR;AAAgBC,EAAAA,IAAI,EAAE;AAAtB,CADY,EAEZ;AAACD,EAAAA,KAAK,EAAE,OAAR;AAAiBC,EAAAA,IAAI,EAAE;AAAvB,CAFY,EAGZ;AAACD,EAAAA,KAAK,EAAE,KAAR;AAAeC,EAAAA,IAAI,EAAE;AAArB,CAHY,EAIZ;AAACD,EAAAA,KAAK,EAAE,WAAR;AAAqBC,EAAAA,IAAI,EAAE;AAA3B,CAJY,CAAhB;;AAOA,MAAMC,aAAN,SAA4BP,SAA5B,CAAsC;AAClCQ,EAAAA,WAAW,CAAEC,KAAF,EAAQ;AACf,UAAMA,KAAN;;AADe,SA0BnBC,eA1BmB,GA0BAJ,IAAD,IAAS;AACvB,YAAMK,KAAK,GAAGV,CAAC,CAAC,qBAAD,CAAD,CACGW,IADH,CACQ,OADR,EAEGT,SAFH,EAAd;AAGgBQ,MAAAA,KAAK,CAACE,KAAN;AACAF,MAAAA,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAeT,IAAf;AACAK,MAAAA,KAAK,CAACK,IAAN;AACnB,KAjCkB;AAElB;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,GAAL,GAAWjB,CAAC,CAAC,KAAKkB,EAAN,CAAZ;AACA,SAAKD,GAAL,CAASf,SAAT,CAAmB;AACfiB,MAAAA,GAAG,EAAC,yBADW;AAEfd,MAAAA,IAAI,EAAE,KAAKG,KAAL,CAAWH,IAFF;AAGfF,MAAAA,OAAO,EAAEA,OAHM;AAIfiB,MAAAA,QAAQ,EAAE,KAJK;AAKfC,MAAAA,QAAQ,EAAE;AAACC,QAAAA,UAAU,EAAE;AAAb;AALK,KAAnB;AAOH;;AAEDC,EAAAA,oBAAoB,GAAG;AACnBvB,IAAAA,CAAC,CAAC,qBAAD,CAAD,CAAyBW,IAAzB,CAA8B,OAA9B,EAAuCT,SAAvC,GAAmDsB,OAAnD,CAA2D,IAA3D;AACH;;AAEDC,EAAAA,qBAAqB,CAACC,SAAD,EAAY;AAC7B,QAAGA,SAAS,CAACrB,IAAV,KAAmB,KAAKG,KAAL,CAAWH,IAAjC,EAAsC;AAClC,WAAKI,eAAL,CAAqBiB,SAAS,CAACrB,IAA/B;AACH;;AACD,WAAO,KAAP;AACH;;AAWDsB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,6BACI;AACI,QAAA,SAAS,EAAC,mEADd;AAEI,QAAA,EAAE,EAAC,WAFP;AAGI,QAAA,KAAK,EAAC,MAHV;AAII,QAAA,WAAW,EAAC,GAJhB;AAKI,QAAA,GAAG,EAAIT,EAAD,IAAS,KAAKA,EAAL,GAAUA;AAL7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAhDiC;;AAmDtC,eAAeZ,aAAf","sourcesContent":["import React, {Component} from 'react'\r\nconst $ = require ('jquery')\r\n$.DataTable = require('datatables.net')\r\nrequire ('datatables.net-dt/css/jquery.dataTables.css');\r\nrequire ('datatables.net-dt/css/jquery.dataTables.min.css');\r\nconst columns = [\r\n    {title: 'Name', data: 'name'},\r\n    {title: 'Idade', data: 'idade'},\r\n    {title: 'CPF', data: 'cpf'},\r\n    {title: 'Data Nasc', data: 'data_nasc'},\r\n]\r\n\r\nclass DataTableComp extends Component {\r\n    constructor (props){\r\n        super(props)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.$el = $(this.el)\r\n        this.$el.DataTable({\r\n            dom:'<\"data-table-wrapper\"t>',\r\n            data: this.props.data,\r\n            columns: columns,\r\n            ordering: false,\r\n            language: {emptyTable: 'Search a name'}\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        $(\".data-table-wrapper\").find(\"table\").DataTable().destroy(true)\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        if(nextProps.data !== this.props.data){\r\n            this.reloadTableData(nextProps.data)\r\n        }\r\n        return false;\r\n    }\r\n\r\n    reloadTableData = (data) =>{\r\n        const table = $('.data-table-wrapper')\r\n                        .find('table')\r\n                        .DataTable();\r\n                        table.clear();\r\n                        table.rows.add(data);\r\n                        table.draw();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <table\r\n                    className=\"table table-borderless display compact cell-border dt-body-center\"\r\n                    id=\"dataTable\"\r\n                    width=\"100%\"\r\n                    cellSpacing=\"0\"\r\n                    ref={ (el) => (this.el = el)}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataTableComp;"]},"metadata":{},"sourceType":"module"}